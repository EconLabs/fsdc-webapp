services:
  postgres:
    container_name: fsdc_postgres_staging
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: fsdc_db_staging
    ports:
      - "5432:5432" # Optional: exposes Postgres to host at localhost:5432
    volumes:
      - pgdata_staging:/var/lib/postgresql/data
    networks:
      - postgres_network

  django_staging:
    container_name: fsdc_webapp_staging
    build:
      context: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: fsdc_db_staging
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres # Internal name (not localhost)
      DEV: True
      DEBUG: True
    command: >
      sh -c "python manage.py migrate &&
             python manage.py shell -c 'from django.contrib.auth.models import User; User.objects.filter(username=\"${DJANGO_SUPERUSER_USERNAME}\").exists() or User.objects.create_superuser(\"${DJANGO_SUPERUSER_USERNAME}\", \"${DJANGO_SUPERUSER_EMAIL}\", \"${DJANGO_SUPERUSER_PASSWORD}\")' &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn fsdc_webapp.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - postgres_network
    volumes:
      - ./data:/app/data

volumes:
  pgdata_staging:


networks:
  postgres_network:
    driver: bridge
